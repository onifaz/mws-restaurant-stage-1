"use strict";!function(){function e(e){return new Promise(function(t,r){e.onsuccess=function(){t(e.result)},e.onerror=function(){r(e.error)}})}function t(t,r,n){var o,a=new Promise(function(a,i){e(o=t[r].apply(t,n)).then(a,i)});return a.request=o,a}function r(e,t,r){r.forEach(function(r){Object.defineProperty(e.prototype,r,{get:function(){return this[t][r]},set:function(e){this[t][r]=e}})})}function n(e,r,n,o){o.forEach(function(o){o in n.prototype&&(e.prototype[o]=function(){return t(this[r],o,arguments)})})}function o(e,t,r,n){n.forEach(function(n){n in r.prototype&&(e.prototype[n]=function(){return this[t][n].apply(this[t],arguments)})})}function a(e,r,n,o){o.forEach(function(o){o in n.prototype&&(e.prototype[o]=function(){return e=this[r],(n=t(e,o,arguments)).then(function(e){if(e)return new s(e,n.request)});var e,n})})}function i(e){this._index=e}function s(e,t){this._cursor=e,this._request=t}function c(e){this._store=e}function u(e){this._tx=e,this.complete=new Promise(function(t,r){e.oncomplete=function(){t()},e.onerror=function(){r(e.error)},e.onabort=function(){r(e.error)}})}function l(e,t,r){this._db=e,this.oldVersion=t,this.transaction=new u(r)}function p(e){this._db=e}r(i,"_index",["name","keyPath","multiEntry","unique"]),n(i,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),a(i,"_index",IDBIndex,["openCursor","openKeyCursor"]),r(s,"_cursor",["direction","key","primaryKey","value"]),n(s,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach(function(t){t in IDBCursor.prototype&&(s.prototype[t]=function(){var r=this,n=arguments;return Promise.resolve().then(function(){return r._cursor[t].apply(r._cursor,n),e(r._request).then(function(e){if(e)return new s(e,r._request)})})})}),c.prototype.createIndex=function(){return new i(this._store.createIndex.apply(this._store,arguments))},c.prototype.index=function(){return new i(this._store.index.apply(this._store,arguments))},r(c,"_store",["name","keyPath","indexNames","autoIncrement"]),n(c,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),a(c,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),o(c,"_store",IDBObjectStore,["deleteIndex"]),u.prototype.objectStore=function(){return new c(this._tx.objectStore.apply(this._tx,arguments))},r(u,"_tx",["objectStoreNames","mode"]),o(u,"_tx",IDBTransaction,["abort"]),l.prototype.createObjectStore=function(){return new c(this._db.createObjectStore.apply(this._db,arguments))},r(l,"_db",["name","version","objectStoreNames"]),o(l,"_db",IDBDatabase,["deleteObjectStore","close"]),p.prototype.transaction=function(){return new u(this._db.transaction.apply(this._db,arguments))},r(p,"_db",["name","version","objectStoreNames"]),o(p,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach(function(e){[c,i].forEach(function(t){t.prototype[e.replace("open","iterate")]=function(){var t,r=(t=arguments,Array.prototype.slice.call(t)),n=r[r.length-1],o=this._store||this._index,a=o[e].apply(o,r.slice(0,-1));a.onsuccess=function(){n(a.result)}}})}),[i,c].forEach(function(e){e.prototype.getAll||(e.prototype.getAll=function(e,t){var r=this,n=[];return new Promise(function(o){r.iterateCursor(e,function(e){e?(n.push(e.value),void 0===t||n.length!=t?e.continue():o(n)):o(n)})})})});var d={open:function(e,r,n){var o=t(indexedDB,"open",[e,r]),a=o.request;return a.onupgradeneeded=function(e){n&&n(new l(a.result,e.oldVersion,a.transaction))},o.then(function(e){return new p(e)})},delete:function(e){return t(indexedDB,"deleteDatabase",[e])}};"undefined"!=typeof module?(module.exports=d,module.exports.default=module.exports):self.idb=d}();class DBHelper{static get REST_URL(){return"http://localhost:1337/"}static get IDB_NAME(){return"restareviews"}static get IDB_VERSION(){return 2}static get IDB_STORE_RESTAURANTS(){return"restaurants"}static get IDB_STORE_REVIEWS(){return"reviews"}static openIDB(){return self.window&&!navigator.serviceWorker?Promise.resolve():idb.open(DBHelper.IDB_NAME,DBHelper.IDB_VERSION,e=>{const t=e.createObjectStore(DBHelper.IDB_STORE_RESTAURANTS,{keyPath:"id",autoIncrement:!0}),r=e.createObjectStore(DBHelper.IDB_STORE_REVIEWS,{keyPath:"id",autoIncrement:!0});t.createIndex("pending-upload","pendingUpload",{unique:!1}),r.createIndex("pending-upload","pendingUpload",{unique:!1})})}static fetchRestaurants(e){DBHelper.openIDB().then(e=>{if(e)return e.transaction(DBHelper.IDB_STORE_RESTAURANTS).objectStore(DBHelper.IDB_STORE_RESTAURANTS).getAll()}).then(t=>{if(t&&t.length>0)return e(null,t);fetch(DBHelper.REST_URL+"restaurants").then(e=>e.json()).then(t=>(DBHelper.openIDB().then(e=>{if(!e)return;const r=e.transaction(DBHelper.IDB_STORE_RESTAURANTS,"readwrite").objectStore(DBHelper.IDB_STORE_RESTAURANTS);t.forEach(function(e){r.put(e)})}),e(null,t))).catch(e=>{console.warn("Request failed. Returned status of",e)})})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.find(t=>t.id==e);r?t(null,r):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.filter(t=>t.cuisine_type==e);t(null,r)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.filter(t=>t.neighborhood==e);t(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,r){DBHelper.fetchRestaurants((n,o)=>{if(n)r(n,null);else{let n=o;"all"!=e&&(n=n.filter(t=>t.cuisine_type==e)),"all"!=t&&(n=n.filter(e=>e.neighborhood==t)),r(null,n)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].neighborhood),n=t.filter((e,r)=>t.indexOf(e)==r);e(null,n)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].cuisine_type),n=t.filter((e,r)=>t.indexOf(e)==r);e(null,n)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){if(e.photograph){const t="(max-width:991px) 75vw, 45vw";return DBHelper.imagePictureforRestaurant(e,t)}return DBHelper.imageErrorForRestaurant(e)}static imageUrlForRestaurants(e){if(e.photograph){const t="(max-width: 679px) 400px, (max-width: 989px) and (min-width: 680px) 48vw, (min-width:990px) 350px, (min-width:1780px) 400px";return DBHelper.imagePictureforRestaurant(e,t)}return DBHelper.imageErrorForRestaurant(e)}static imageErrorForRestaurant(e){const t=document.createElement("div"),r=document.createElement("img");return t.className="restimage-wrap",r.className="restaurant-img",r.setAttribute("data-src","img/no-image-available.svg"),r.setAttribute("alt","No photo available for "+e.name+" restaurant"),t.append(r),t}static imagePictureforRestaurant(e,t){const r=document.createElement("picture"),n=document.createElement("source");n.setAttribute("sizes",t),n.setAttribute("type","image/webp"),n.setAttribute("data-srcset",DBHelper.imageSrcsetForRestaurant(e.photograph,"webp")),r.append(n);const o=document.createElement("source");o.setAttribute("sizes",t),o.setAttribute("data-srcset",DBHelper.imageSrcsetForRestaurant(e.photograph,"jpg")),r.append(o);const a=document.createElement("img");return a.className="restaurant-img",a.setAttribute("data-src",`img/restaurants/${e.photograph}.jpg`),a.setAttribute("alt","Photo of "+e.name+" restaurant"),r.append(a),r}static imageSrcsetForRestaurant(e,t){return`img/restaurants/${e}.${t} 860w, img/restaurants/${e}-720.${t} 780w, img/restaurants/${e}-540.${t} 580w, img/restaurants/${e}-350.${t} 420w`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}static fetchReviewsForRestaurant(e,t){DBHelper.openIDB().then(e=>{if(e)return e.transaction(DBHelper.IDB_STORE_REVIEWS).objectStore(DBHelper.IDB_STORE_REVIEWS).getAll()}).then(r=>{if(e=parseInt(e),(r=r.filter(t=>t.restaurant_id===e))&&r.length>0)return console.info("Reviews served from IDB"),t(null,r);console.info("Reviews fetched from online server"),fetch(DBHelper.REST_URL+"reviews/?restaurant_id="+e).then(e=>e.json()).then(e=>(e.forEach(function(e){e.createdAt=new Date(e.createdAt).valueOf(),e.updatedAt=new Date(e.updatedAt).valueOf()}),DBHelper.openIDB().then(t=>{if(!t)return;const r=t.transaction(DBHelper.IDB_STORE_REVIEWS,"readwrite").objectStore(DBHelper.IDB_STORE_REVIEWS);e.forEach(function(e){r.put(e)})}),t(null,e))).catch(e=>(console.warn("Request failed"),t(e,null)))})}static fetchReviewsByRestaurantId(e,t){DBHelper.fetchReviewsForRestaurant(e,(e,r)=>{if(e)t(e,null);else{r?t(null,r):t("Reviews do not exist",null)}})}static saveReview(e){if(e)return console.log(e.hasOwnProperty("id")),fetch(DBHelper.REST_URL+"reviews",{method:"POST",body:JSON.stringify(e)}).then(e=>e.json()).then(t=>((e=t).createdAt=new Date(e.createdAt).valueOf(),e.updatedAt=new Date(e.updatedAt).valueOf(),DBHelper.insertReviewIDB(e))).catch(t=>(console.warn("Post review request failed. Error: ",t),e.pendingUpload="yes",e.createdAt=(new Date).valueOf(),e.updatedAt=(new Date).valueOf(),DBHelper.insertReviewIDB(e,t=>{console.warn("Pending review record inserted in IDB - ",e)})))}static insertReviewIDB(e,t){return DBHelper.openIDB().then(t=>{if(!t)return;return t.transaction(DBHelper.IDB_STORE_REVIEWS,"readwrite").objectStore(DBHelper.IDB_STORE_REVIEWS).put(e).complete}).then(r=>("function"==typeof t&&t(),console.log("review added in IDB"),e)).catch(e=>{console.warn("Add review in IDB failed. Error:",e)})}static favoriteRestaurant(e,t){e&&(e.is_favorite=t,fetch(DBHelper.REST_URL+"restaurants/"+e.id+"/?is_favorite="+t,{method:"PUT"}).then(t=>{DBHelper.updateRestaurantInDb(e)}).catch(t=>{console.warn("Post favorite request failed. Error: ",t),e.pendingUpload="yes",DBHelper.updateRestaurantInDb(e,t=>{console.warn("Pending favorite record inserted in IDB - ",e.id)})}))}static updateRestaurantInDb(e,t){DBHelper.openIDB().then(r=>{r&&(r.transaction(DBHelper.IDB_STORE_RESTAURANTS,"readwrite").objectStore(DBHelper.IDB_STORE_RESTAURANTS).put(e),"function"==typeof t&&t())})}static syncAllData(){console.info("Syncing all the data with the server"),DBHelper.openIDB().then(e=>{if(e)return console.info("Syncing favorites..."),e.transaction(DBHelper.IDB_STORE_RESTAURANTS).objectStore(DBHelper.IDB_STORE_RESTAURANTS).index("pending-upload").openCursor("yes")}).then(function e(t){if(!t)return;let r=t.value;return delete r.pendingUpload,DBHelper.favoriteRestaurant(r,r.is_favorite),t.continue().then(e)}),DBHelper.openIDB().then(e=>{if(e)return console.info("Syncing reviews..."),e.transaction(DBHelper.IDB_STORE_REVIEWS).objectStore(DBHelper.IDB_STORE_REVIEWS).index("pending-upload").openCursor("yes")}).then(function e(t){if(!t)return;let r=t.value;return DBHelper.removeReviewIDb(r.id,()=>{delete r.pendingUpload,DBHelper.saveReview(r)}),t.continue().then(e)})}static removeReviewIDb(e,t){DBHelper.openIDB().then(r=>{r&&(r.transaction(DBHelper.IDB_STORE_REVIEWS,"readwrite").objectStore(DBHelper.IDB_STORE_REVIEWS).delete(e),"function"==typeof t&&t())})}}let observer;const observerConfig={rootMargin:"40px 0%",threshold:.1};let loadImage=e=>{e.dataset&&e.dataset.srcset&&(e.srcset=e.dataset.srcset),e.dataset&&e.dataset.src&&(e.src=e.dataset.src)},onIntersection=e=>{e.forEach(e=>{e.intersectionRatio>0&&(observer.unobserve(e.target),loadImage(e.target))})};function lazyload(){const e=window.document.querySelectorAll("source, img");"IntersectionObserver"in window?(observer=new IntersectionObserver(onIntersection,observerConfig),e.forEach(e=>{observer.observe(e)})):(console.log("Intersection Observer not found :("),Array.from(e).forEach(e=>loadImage(e)))}navigator.serviceWorker&&navigator.serviceWorker.register("/sw.js").then(e=>{console.log("SW is registered!"),navigator.serviceWorker.ready.then(function(e){return console.log("registerwhenready"),e.sync.register("dataSync")})}).catch(e=>console.log("SW registration ",e));
//# sourceMappingURL=bundle.js.map

{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","map","document","addEventListener","event","fetchRestaurantFromURL","error","console","window","innerWidth","mapBtn","getElementById","getElementsByTagName","setTimeout","click","initDetailMap","self","google","maps","Map","zoom","center","latlng","scrollwheel","DBHelper","mapMarkerForRestaurant","addGmapDetail","setAttribute","script","createElement","src","type","body","appendChild","callback","id","getParameterByName","fetchRestaurantById","title","name","fillBreadcrumb","fillRestaurantHTML","lazyload","innerHTML","address","imageDiv","image","imageUrlForRestaurant","append","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","head","dayCol","hoursCol","key","row","day","time","reviews","container","noReviews","ul","forEach","review","createReviewHTML","li","article","div","date","rating","ratingString","i","len","comments","breadcrumb","a","url","location","href","replace","results","RegExp","exec","decodeURIComponent"],"mappings":"AAAA,IAAIA,WAAYC,IAEhBC,SAASC,iBAAiB,mBAAoBC,IAO5C,GALAC,uBAAuB,CAACC,EAAON,KACzBM,GACFC,QAAQD,MAAMA,KAGdE,OAAOC,YAAc,IAAK,CAC5B,MAAMC,EAASR,SAASS,eAAe,OAAOC,qBAAqB,KAAK,GACxEJ,OAAOK,WAAWH,EAAOI,QAAS,QAOtCN,OAAOO,cAAgB,MACjBC,KAAKhB,aACPgB,KAAKf,IAAM,IAAIgB,OAAOC,KAAKC,IAAIjB,SAASS,eAAe,QACrDS,KAAM,GACNC,OAAQL,KAAKhB,WAAWsB,OACxBC,aAAa,IAGO,iBAAXN,QAA8C,iBAAhBA,OAAOC,MAC9CM,SAASC,uBAAuBT,KAAKhB,WAAYgB,KAAKf,QAM5DyB,cAAgB,MACdxB,SACGS,eAAe,iBACfgB,aAAa,QAAS,kBACzB,MAAMC,EAAS1B,SAAS2B,cAAc,UACtCD,EAAOE,IAAM,8HACbF,EAAOG,KAAO,kBACd7B,SAAS8B,KAAKC,YAAYL,KAM5BvB,uBAAyB6B,CAAAA,IACvB,GAAIlB,KAAKhB,WAGP,YADAkC,EAAS,KAAMlB,KAAKhB,YAGtB,MAAMmC,EAAKC,mBAAmB,MACzBD,EAKHX,SAASa,oBAAoBF,EAAI,CAAC7B,EAAON,KACvCgB,KAAKhB,WAAaA,EACbA,GAILE,SAASoC,MAAQtB,KAAKhB,WAAWuC,KAAO,mBACxCC,iBACAC,qBACAC,WACAR,EAAS,KAAMlC,IAPbO,QAAQD,MAAMA,MANlBA,MAAQ,0BACR4B,EAAS5B,MAAO,SAoBpBmC,mBAAqB,EAACzC,EAAagB,KAAKhB,cACzBE,SAASS,eAAe,mBAChCgC,UAAY3C,EAAWuC,KAE5B,MAAMK,EAAU1C,SAASS,eAAe,sBACxCiC,EAAQD,UAAY3C,EAAW4C,QAC/BA,EAAQjB,aAAa,WAAY,KAEjC,MAAMkB,EAAW3C,SAASS,eAAe,kBACnCmC,EAAQtB,SAASuB,sBAAsB/C,GAC7C6C,EAASG,OAAOF,GAEA5C,SAASS,eAAe,sBAChCgC,UAAY3C,EAAWiD,aAG3BjD,EAAWkD,iBACbC,0BAGFC,oBAMFD,wBAA0B,EACxBE,EAAiBrC,KAAKhB,WAAWkD,mBAEjC,MAAMI,EAAQpD,SAASS,eAAe,oBAChC4C,EAAOrD,SAAS2B,cAAc,MAC9B2B,EAAStD,SAAS2B,cAAc,MAChC4B,EAAWvD,SAAS2B,cAAc,MAExC2B,EAAO7B,aAAa,QAAS,OAC7B6B,EAAO7B,aAAa,WAAY,KAChC6B,EAAOb,UAAY,MACnBY,EAAKtB,YAAYuB,GAEjBC,EAAS9B,aAAa,QAAS,OAC/B8B,EAAS9B,aAAa,WAAY,KAClC8B,EAASd,UAAY,gBACrBY,EAAKtB,YAAYwB,GAEjBH,EAAMrB,YAAYsB,GAElB,IAAK,IAAIG,KAAOL,EAAgB,CAC9B,MAAMM,EAAMzD,SAAS2B,cAAc,MAC7B+B,EAAM1D,SAAS2B,cAAc,MAC7BgC,EAAO3D,SAAS2B,cAAc,MAEpC+B,EAAIjB,UAAYe,EAChBE,EAAIjC,aAAa,WAAY,KAC7BgC,EAAI1B,YAAY2B,GAEhBC,EAAKlB,UAAYU,EAAeK,GAChCG,EAAKlC,aAAa,WAAY,KAC9BgC,EAAI1B,YAAY4B,GAEhBP,EAAMrB,YAAY0B,MAOtBP,gBAAkB,EAACU,EAAU9C,KAAKhB,WAAW8D,WAC3C,MAAMC,EAAY7D,SAASS,eAAe,qBACpC2B,EAAQpC,SAAS2B,cAAc,MAKrC,GAJAS,EAAMK,UAAY,UAClBL,EAAMX,aAAa,KAAM,iBACzBoC,EAAU9B,YAAYK,IAEjBwB,EAAS,CACZ,MAAME,EAAY9D,SAAS2B,cAAc,KAGzC,OAFAmC,EAAUrB,UAAY,uBACtBoB,EAAU9B,YAAY+B,GAIxB,MAAMC,EAAK/D,SAASS,eAAe,gBACnCmD,EAAQI,QAAQC,IACdF,EAAGhC,YAAYmC,iBAAiBD,MAGlCJ,EAAU9B,YAAYgC,KAMxBG,iBAAmBD,CAAAA,IACjB,MAAME,EAAKnE,SAAS2B,cAAc,MAC5ByC,EAAUpE,SAAS2B,cAAc,WACvCyC,EAAQ3C,aAAa,WAAY,KACjC2C,EAAQ3C,aAAa,OAAQ,WAC7B2C,EAAQ3C,aAAa,cAAe,WAEpC,MAAM4C,EAAMrE,SAAS2B,cAAc,OAC7B2C,EAAOtE,SAAS2B,cAAc,KACpC2C,EAAK7B,UAAYwB,EAAOK,KACxBA,EAAK7C,aAAa,sBAAuBwC,EAAOK,SAChDA,EAAK7C,aAAa,QAAS,gBAC3B4C,EAAItC,YAAYuC,GAEhB,MAAMjC,EAAOrC,SAAS2B,cAAc,KACpCU,EAAKI,UAAYwB,EAAO5B,KACxBA,EAAKZ,aAAa,QAAS,kBAC3BY,EAAKZ,aAAa,wBAAyBwC,EAAO5B,SAClDgC,EAAItC,YAAYM,GAChBgC,EAAI5C,aAAa,QAAS,gBAC1B2C,EAAQrC,YAAYsC,GAEpB,MAAME,EAASvE,SAAS2B,cAAc,KACtC,IAAI6C,EACF,6HACF,IAAK,IAAIC,EAAI,EAAGC,EAAMT,EAAOM,OAAQE,EAAIC,EAAKD,IAC5CD,GAAgB,oCAElB,GAAIP,EAAOM,OAAS,EAClB,IAAK,IAAIE,EAAI,EAAGC,EAAM,EAAIT,EAAOM,OAAQE,EAAIC,EAAKD,IAChDD,GAAgB,8BAGpBA,GAAgB,UAChBD,EAAO9B,UAAY+B,EACnBD,EAAO9C,aAAa,wBAAyBwC,EAAOM,oBACpDA,EAAO9C,aAAa,QAAS,kBAC7B2C,EAAQrC,YAAYwC,GAEpB,MAAMI,EAAW3E,SAAS2B,cAAc,KAOxC,OANAgD,EAASlC,UAAYwB,EAAOU,SAC5BA,EAASlD,aAAa,QAAS,mBAC/B2C,EAAQrC,YAAY4C,GAEpBR,EAAGpC,YAAYqC,GAERD,IAMT7B,eAAiB,EAACxC,EAAagB,KAAKhB,cAClC,MAAM8E,EAAa5E,SAChBS,eAAe,cACfC,qBAAqB,MAAM,GACxByD,EAAKnE,SAAS2B,cAAc,MAC5BkD,EAAI7E,SAAS2B,cAAc,KAEjCkD,EAAEpC,UAAY3C,EAAWuC,KACzBwC,EAAEpD,aAAa,eAAgB,QAE/B0C,EAAGpC,YAAY8C,GAEfD,EAAW7C,YAAYoC,KAMzBjC,mBAAqB,EAACG,EAAMyC,KACrBA,IAAKA,EAAMxE,OAAOyE,SAASC,MAChC3C,EAAOA,EAAK4C,QAAQ,UAAW,QAC/B,MACEC,EADY,IAAIC,cAAc9C,sBACd+C,KAAKN,GACvB,OAAKI,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH","file":"restaurant_info.js","sourcesContent":["let restaurant, map;\n\ndocument.addEventListener('DOMContentLoaded', event => {\n  /* Populate the page without waiting for google maps*/\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) {\n      console.error(error);\n    }\n  });\n  if (window.innerWidth >= 992) {\n    const mapBtn = document.getElementById('map').getElementsByTagName('a')[0];\n    window.setTimeout(mapBtn.click(), 250);\n  }\n});\n\n/**\n * Initialize Google map, called from HTML.\n */\nwindow.initDetailMap = () => {\n  if (self.restaurant) {\n    self.map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 16,\n      center: self.restaurant.latlng,\n      scrollwheel: false\n    });\n    //updateRestaurants();\n    if (typeof google === 'object' && typeof google.maps === 'object')\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n  }\n};\n/**\n * Add google map only on request of interactivity\n */\naddGmapDetail = () => {\n  document\n    .getElementById('map-container')\n    .setAttribute('class', 'map--requested');\n  const script = document.createElement('script');\n  script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBN-_N7NAK_k8QKsoHe6pd4M8aIhA1HX6E&libraries=places&callback=initDetailMap`;\n  script.type = 'text/javascript';\n  document.body.appendChild(script);\n};\n\n/**\n * Get current restaurant from page URL.\n */\nfetchRestaurantFromURL = callback => {\n  if (self.restaurant) {\n    // restaurant already fetched!\n    callback(null, self.restaurant);\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) {\n    // no id found in URL\n    error = 'No restaurant id in URL';\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      document.title = self.restaurant.name + ' Restaurant Info';\n      fillBreadcrumb();\n      fillRestaurantHTML();\n      lazyload();\n      callback(null, restaurant);\n    });\n  }\n};\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nfillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n  address.setAttribute('tabindex', '0');\n\n  const imageDiv = document.getElementById('restaurant-img');\n  const image = DBHelper.imageUrlForRestaurant(restaurant);\n  imageDiv.append(image);\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n};\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nfillRestaurantHoursHTML = (\n  operatingHours = self.restaurant.operating_hours\n) => {\n  const hours = document.getElementById('restaurant-hours');\n  const head = document.createElement('tr');\n  const dayCol = document.createElement('th');\n  const hoursCol = document.createElement('th');\n\n  dayCol.setAttribute('scope', 'col');\n  dayCol.setAttribute('tabindex', '0');\n  dayCol.innerHTML = 'Day';\n  head.appendChild(dayCol);\n\n  hoursCol.setAttribute('scope', 'col');\n  hoursCol.setAttribute('tabindex', '0');\n  hoursCol.innerHTML = 'Opening hours';\n  head.appendChild(hoursCol);\n\n  hours.appendChild(head);\n\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n    const day = document.createElement('td');\n    const time = document.createElement('td');\n\n    day.innerHTML = key;\n    day.setAttribute('tabindex', '0');\n    row.appendChild(day);\n\n    time.innerHTML = operatingHours[key];\n    time.setAttribute('tabindex', '0');\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n};\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nfillReviewsHTML = (reviews = self.restaurant.reviews) => {\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h2');\n  title.innerHTML = 'Reviews';\n  title.setAttribute('id', 'reviews-title');\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n\n  container.appendChild(ul);\n};\n\n/**\n * Create review HTML and add it to the webpage.\n */\ncreateReviewHTML = review => {\n  const li = document.createElement('li');\n  const article = document.createElement('article');\n  article.setAttribute('tabindex', '0');\n  article.setAttribute('role', 'article');\n  article.setAttribute('arial-label', 'Review.');\n\n  const div = document.createElement('div');\n  const date = document.createElement('p');\n  date.innerHTML = review.date;\n  date.setAttribute('aria-label', `Date: ${review.date}.`);\n  date.setAttribute('class', 'review--date');\n  div.appendChild(date);\n\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  name.setAttribute('class', 'review--author');\n  name.setAttribute('aria-label', `Author: ${review.name}.`);\n  div.appendChild(name);\n  div.setAttribute('class', 'review--head');\n  article.appendChild(div);\n\n  const rating = document.createElement('p');\n  let ratingString =\n    '<span class=\"review--ratingTitle\" arial-hidden=\"true\">Rating</span> <span class=\"review--ratingStars\" arial-hidden=\"true\">';\n  for (let i = 0, len = review.rating; i < len; i++) {\n    ratingString += '<span class=\"full\">&#9733;</span>';\n  }\n  if (review.rating < 5) {\n    for (let i = 0, len = 5 - review.rating; i < len; i++) {\n      ratingString += '<span class=\"empty\"></span>';\n    }\n  }\n  ratingString += '</span>';\n  rating.innerHTML = ratingString;\n  rating.setAttribute('aria-label', `Rating: ${review.rating} out of 5.`);\n  rating.setAttribute('class', 'review--rating');\n  article.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  comments.setAttribute('class', 'review--comment');\n  article.appendChild(comments);\n\n  li.appendChild(article);\n\n  return li;\n};\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nfillBreadcrumb = (restaurant = self.restaurant) => {\n  const breadcrumb = document\n    .getElementById('breadcrumb')\n    .getElementsByTagName('ol')[0];\n  const li = document.createElement('li');\n  const a = document.createElement('a');\n\n  a.innerHTML = restaurant.name;\n  a.setAttribute('aria-current', 'page');\n\n  li.appendChild(a);\n\n  breadcrumb.appendChild(li);\n};\n\n/**\n * Get a parameter by name from page URL.\n */\ngetParameterByName = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n"]}
{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","map","document","addEventListener","event","fetchRestaurantFromURL","error","console","window","initDetailMap","self","google","maps","Map","getElementById","zoom","center","latlng","scrollwheel","DBHelper","mapMarkerForRestaurant","callback","id","getParameterByName","fetchRestaurantById","title","name","fillBreadcrumb","fillRestaurantHTML","innerHTML","address","setAttribute","image","className","src","imageUrlForRestaurant","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","head","createElement","dayCol","hoursCol","appendChild","key","row","day","time","reviews","container","noReviews","ul","forEach","review","createReviewHTML","li","article","div","date","rating","ratingString","i","len","comments","breadcrumb","getElementsByTagName","a","url","location","href","replace","results","RegExp","exec","decodeURIComponent"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant, map;\n\ndocument.addEventListener('DOMContentLoaded', event => {\n  /* Populate the page without waiting for google maps*/\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) {\n      console.error(error);\n    }\n  });\n});\n\n/**\n * Initialize Google map, called from HTML.\n */\nwindow.initDetailMap = () => {\n  if (self.restaurant) {\n    self.map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 16,\n      center: self.restaurant.latlng,\n      scrollwheel: false\n    });\n    DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n  }\n};\n\n/**\n * Get current restaurant from page URL.\n */\nfetchRestaurantFromURL = callback => {\n  if (self.restaurant) {\n    // restaurant already fetched!\n    callback(null, self.restaurant);\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) {\n    // no id found in URL\n    error = 'No restaurant id in URL';\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      document.title = self.restaurant.name + ' Restaurant Info';\n      fillBreadcrumb();\n      fillRestaurantHTML();\n      callback(null, restaurant);\n    });\n  }\n};\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nfillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n  address.setAttribute('tabindex', '0');\n\n  const image = document.getElementById('restaurant-img');\n  image.className = 'restaurant-img';\n  image.src = DBHelper.imageUrlForRestaurant(restaurant);\n  image.setAttribute('alt', 'Photo of ' + restaurant.name + ' restaurant');\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n};\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nfillRestaurantHoursHTML = (\n  operatingHours = self.restaurant.operating_hours\n) => {\n  const hours = document.getElementById('restaurant-hours');\n  const head = document.createElement('tr');\n  const dayCol = document.createElement('th');\n  const hoursCol = document.createElement('th');\n\n  dayCol.setAttribute('scope', 'col');\n  dayCol.setAttribute('tabindex', '0');\n  dayCol.innerHTML = 'Day';\n  head.appendChild(dayCol);\n\n  hoursCol.setAttribute('scope', 'col');\n  hoursCol.setAttribute('tabindex', '0');\n  hoursCol.innerHTML = 'Opening hours';\n  head.appendChild(hoursCol);\n\n  hours.appendChild(head);\n\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n    const day = document.createElement('td');\n    const time = document.createElement('td');\n\n    day.innerHTML = key;\n    day.setAttribute('tabindex', '0');\n    row.appendChild(day);\n\n    time.innerHTML = operatingHours[key];\n    time.setAttribute('tabindex', '0');\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n};\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nfillReviewsHTML = (reviews = self.restaurant.reviews) => {\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h2');\n  title.innerHTML = 'Reviews';\n  title.setAttribute('id', 'reviews-title');\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n\n  container.appendChild(ul);\n};\n\n/**\n * Create review HTML and add it to the webpage.\n */\ncreateReviewHTML = review => {\n  const li = document.createElement('li');\n  const article = document.createElement('article');\n  article.setAttribute('tabindex', '0');\n  article.setAttribute('role', 'article');\n  article.setAttribute('arial-label', 'Review.');\n\n  const div = document.createElement('div');\n  const date = document.createElement('p');\n  date.innerHTML = review.date;\n  date.setAttribute('aria-label', `Date: ${review.date}.`);\n  date.setAttribute('class', 'review--date');\n  div.appendChild(date);\n\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  name.setAttribute('class', 'review--author');\n  name.setAttribute('aria-label', `Author: ${review.name}.`);\n  div.appendChild(name);\n  div.setAttribute('class', 'review--head');\n  article.appendChild(div);\n\n  const rating = document.createElement('p');\n  let ratingString =\n    '<span class=\"review--ratingTitle\" arial-hidden=\"true\">Rating</span> <span class=\"review--ratingStars\" arial-hidden=\"true\">';\n  for (let i = 0, len = review.rating; i < len; i++) {\n    ratingString += '<span class=\"full\">&#9733;</span>';\n  }\n  if (review.rating < 5) {\n    for (let i = 0, len = 5 - review.rating; i < len; i++) {\n      ratingString += '<span class=\"empty\"></span>';\n    }\n  }\n  ratingString += '</span>';\n  rating.innerHTML = ratingString;\n  rating.setAttribute('aria-label', `Rating: ${review.rating} out of 5.`);\n  rating.setAttribute('class', 'review--rating');\n  article.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  comments.setAttribute('class', 'review--comment');\n  article.appendChild(comments);\n\n  li.appendChild(article);\n\n  return li;\n};\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nfillBreadcrumb = (restaurant = self.restaurant) => {\n  const breadcrumb = document\n    .getElementById('breadcrumb')\n    .getElementsByTagName('ol')[0];\n  const li = document.createElement('li');\n  const a = document.createElement('a');\n\n  a.innerHTML = restaurant.name;\n  a.setAttribute('aria-current', 'page');\n\n  li.appendChild(a);\n\n  breadcrumb.appendChild(li);\n};\n\n/**\n * Get a parameter by name from page URL.\n */\ngetParameterByName = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n"]}
{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","map","document","addEventListener","event","fetchRestaurantFromURL","error","console","getElementById","addGmapDetail","submitReview","window","innerWidth","mapBtn","setTimeout","click","initDetailMap","self","google","maps","Map","zoom","center","latlng","scrollwheel","DBHelper","mapMarkerForRestaurant","setAttribute","script","createElement","src","type","body","appendChild","callback","id","getParameterByName","fetchRestaurantById","title","name","fillBreadcrumb","fillRestaurantHTML","lazyload","newReview","parentNode","removeChild","innerHTML","favoriteBtn","is_favorite","setFavoriteButton","favoriteRestaurant","target","address","imageDiv","image","imageUrlForRestaurant","append","cuisine_type","operating_hours","fillRestaurantHoursHTML","fetchReviews","status","classList","add","remove","className","indexOf","fetchReviewsByRestaurantId","reviews","fillErrorReviewsHTML","fillReviewsHTML","operatingHours","hours","head","dayCol","hoursCol","key","row","day","time","container","noReviews","sort","ar1","ar2","createdAt","ul","forEach","review","createReviewHTML","li","article","div","date","Date","toDateString","rating","ratingString","i","len","comments","breadcrumb","getElementsByTagName","a","url","location","href","replace","results","RegExp","exec","decodeURIComponent","escapeRegExp","string","reviewHtml","form_button","form_name","form_comment","form_rating","form_stars","value","form_messageArea","reviewList","errorMessage","preventDefault","resetMessage","disabled","length","style","display","restaurant_id","parseInt","saveReview","then","selectedIndex","_","firstChild","insertBefore","smoothScrollTo","focus","message","easeInOutQuart","from","distance","duration","targetID","delta","startY","scrollY","pageYOffset","element","endY","offsetTop","scrollTop","clientTop","distanceY","startTime","getTime","timer","setInterval","newY","clearInterval","scrollTo"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant, map;\n\ndocument.addEventListener('DOMContentLoaded', event => {\n  /* Populate the page without waiting for google maps*/\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) {\n      console.error(error);\n    }\n  });\n  document\n    .getElementById('show-map')\n    .addEventListener('click', addGmapDetail, true);\n  document\n    .getElementById('new-review-form')\n    .addEventListener('submit', submitReview);\n  //no need for if (el.attachEvent) {el.attachEvent('onsubmit', submitReview)} since we are also using arrow functions, so no IE11\n  if (window.innerWidth >= 992) {\n    const mapBtn = document.getElementById('show-map');\n    window.setTimeout(mapBtn.click(), 250);\n  }\n\n  // Alternative to SW Background SYNC\n  // if (navigator.onLine) {\n  //   DBHelper.syncAllData();\n  // }\n  // window.addEventListener('online', function() {\n  //   DBHelper.syncAllData();\n  // });\n  // window.addEventListener('offline', function() {\n  //   console.info('It seems we are offline at the moment...');\n  // });\n});\n\n/**\n * Initialize Google map, called from HTML.\n */\nwindow.initDetailMap = () => {\n  if (self.restaurant) {\n    self.map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 16,\n      center: self.restaurant.latlng,\n      scrollwheel: false\n    });\n    //updateRestaurants();\n    if (typeof google === 'object' && typeof google.maps === 'object')\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n  }\n};\n/**\n * Add google map only on request of interactivity\n */\naddGmapDetail = () => {\n  document\n    .getElementById('map-container')\n    .setAttribute('class', 'map--requested');\n  const script = document.createElement('script');\n  script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBN-_N7NAK_k8QKsoHe6pd4M8aIhA1HX6E&libraries=places&callback=initDetailMap`;\n  script.type = 'text/javascript';\n  document.body.appendChild(script);\n};\n\n/**\n * Get current restaurant from page URL.\n */\nfetchRestaurantFromURL = callback => {\n  if (self.restaurant) {\n    // restaurant already fetched!\n    callback(null, self.restaurant);\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) {\n    // no id found in URL\n    error = 'No restaurant id in URL';\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        const newReview = document.getElementById('new-review');\n        newReview.parentNode.removeChild(newReview);\n        return;\n      }\n      document.title = self.restaurant.name + ' Restaurant Info';\n      fillBreadcrumb();\n      fillRestaurantHTML();\n      lazyload();\n      callback(null, restaurant);\n    });\n  }\n};\n/**\n * Create restaurant HTML and add it to the webpage\n */\nfillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const favoriteBtn = document.getElementById('favorite-button');\n  if (restaurant.is_favorite == 'true') {\n    setFavoriteButton(favoriteBtn, 'true');\n  }\n  favoriteBtn.addEventListener('click', event => {\n    favoriteRestaurant(event.target, restaurant);\n  });\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n  address.setAttribute('tabindex', '0');\n\n  const imageDiv = document.getElementById('restaurant-img');\n  const image = DBHelper.imageUrlForRestaurant(restaurant);\n  imageDiv.append(image);\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  //fillReviewsHTML();\n  fetchReviews();\n};\n\n/*\n * Set status (text and class) for favorite button\n */\nsetFavoriteButton = (target, status) => {\n  if (status === 'true') {\n    target.classList.add('is-favorite');\n    target.innerHTML = '&#9733; Favorite';\n  } else {\n    target.classList.remove('is-favorite');\n    target.innerHTML = '&#9734; Add to favorite';\n  }\n};\n\n/*\n * Restaurant function add-to or remove-from favorites\n */\nfavoriteRestaurant = (target, restaurant) => {\n  if (target.className.indexOf('is-favorite') > -1) {\n    setFavoriteButton(target, 'false');\n    DBHelper.favoriteRestaurant(restaurant, 'false');\n  } else {\n    setFavoriteButton(target, 'true');\n    DBHelper.favoriteRestaurant(restaurant, 'true');\n  }\n};\n\n/**\n * Get current restaurant from page URL.\n */\nfetchReviews = callback => {\n  const id = getParameterByName('id');\n  if (!id) {\n    // no id found in URL\n    error = 'No restaurant id in URL';\n    callback(error, null);\n  } else {\n    DBHelper.fetchReviewsByRestaurantId(id, (error, reviews) => {\n      self.restaurant.reviews = reviews;\n      if (!reviews) {\n        console.error(error);\n        fillErrorReviewsHTML();\n        return;\n      }\n      fillReviewsHTML();\n    });\n  }\n};\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nfillRestaurantHoursHTML = (\n  operatingHours = self.restaurant.operating_hours\n) => {\n  const hours = document.getElementById('restaurant-hours');\n  const head = document.createElement('tr');\n  const dayCol = document.createElement('th');\n  const hoursCol = document.createElement('th');\n\n  dayCol.setAttribute('scope', 'col');\n  dayCol.setAttribute('tabindex', '0');\n  dayCol.innerHTML = 'Day';\n  head.appendChild(dayCol);\n\n  hoursCol.setAttribute('scope', 'col');\n  hoursCol.setAttribute('tabindex', '0');\n  hoursCol.innerHTML = 'Opening hours';\n  head.appendChild(hoursCol);\n\n  hours.appendChild(head);\n\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n    const day = document.createElement('td');\n    const time = document.createElement('td');\n\n    day.innerHTML = key;\n    day.setAttribute('tabindex', '0');\n    row.appendChild(day);\n\n    time.innerHTML = operatingHours[key];\n    time.setAttribute('tabindex', '0');\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n};\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nfillReviewsHTML = (reviews = self.restaurant.reviews) => {\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h2');\n\n  title.innerHTML = 'Reviews';\n  title.setAttribute('id', 'reviews-title');\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    // const emptyList = document.getElementById('reviews-list');\n    // container.removeChild(emptyList);\n    noReviews.setAttribute('class', 'review--notfound');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n\n  //latest on top, \"TripAdvisor\" mode\n  function compare(ar1, ar2) {\n    if (ar1.createdAt < ar2.createdAt) return 1;\n    if (ar1.createdAt > ar2.createdAt) return -1;\n    return 0;\n  }\n  reviews.sort(compare);\n\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n\n  container.appendChild(ul);\n};\nfillErrorReviewsHTML = () => {\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h2');\n  title.innerHTML = 'Reviews';\n  title.setAttribute('id', 'reviews-title');\n  container.appendChild(title);\n  const noReviews = document.createElement('p');\n  // const emptyList = document.getElementById('reviews-list');\n  // container.removeChild(emptyList);\n  noReviews.setAttribute('class', 'review--notfound');\n  noReviews.innerHTML =\n    'There are no older reviews to show: try again when online';\n  container.appendChild(noReviews);\n  return;\n};\n\n/**\n * Create review HTML and add it to the webpage.\n */\ncreateReviewHTML = review => {\n  const li = document.createElement('li');\n  const article = document.createElement('article');\n  article.setAttribute('tabindex', '0');\n  article.setAttribute('role', 'article');\n  article.setAttribute('arial-label', 'Review.');\n\n  const div = document.createElement('div');\n  const date = document.createElement('p');\n  //date.innerHTML = review.date;\n  date.innerHTML = new Date(review.createdAt).toDateString();\n  date.setAttribute('aria-label', `Date: ${review.date}.`);\n  date.setAttribute('class', 'review--date');\n  div.appendChild(date);\n\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  name.setAttribute('class', 'review--author');\n  name.setAttribute('aria-label', `Author: ${review.name}.`);\n  div.appendChild(name);\n  div.setAttribute('class', 'review--head');\n  article.appendChild(div);\n\n  const rating = document.createElement('p');\n  let ratingString =\n    '<span class=\"review--ratingTitle\" arial-hidden=\"true\">Rating</span> <span class=\"review--ratingStars\" arial-hidden=\"true\">';\n  for (let i = 0, len = review.rating; i < len; i++) {\n    ratingString += '<span class=\"full\">&#9733;</span>';\n  }\n  if (review.rating < 5) {\n    for (let i = 0, len = 5 - review.rating; i < len; i++) {\n      ratingString += '<span class=\"empty\"></span>';\n    }\n  }\n  ratingString += '</span>';\n  rating.innerHTML = ratingString;\n  rating.setAttribute('aria-label', `Rating: ${review.rating} out of 5.`);\n  rating.setAttribute('class', 'review--rating');\n  article.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  comments.setAttribute('class', 'review--comment');\n  article.appendChild(comments);\n\n  li.appendChild(article);\n\n  return li;\n};\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nfillBreadcrumb = (restaurant = self.restaurant) => {\n  const breadcrumb = document\n    .getElementById('breadcrumb')\n    .getElementsByTagName('ol')[0];\n  const li = document.createElement('li');\n  const a = document.createElement('a');\n\n  a.innerHTML = restaurant.name;\n  a.setAttribute('aria-current', 'page');\n\n  li.appendChild(a);\n\n  breadcrumb.appendChild(li);\n};\n\n/**\n * Get a parameter by name from page URL.\n */\ngetParameterByName = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\n/**\n * Escaping user input, from:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n */\nescapeRegExp = string => {\n  //return string.replace(/[*+^${}()<>|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n  return string.replace(/[*+^${}()<>|[\\]\\\\]/g, ' ');\n};\n\n/**\n * Verify and submit review\n */\nsubmitReview = event => {\n  let review,\n    reviewHtml,\n    form_button = document.getElementById('new-review--submit'),\n    form_name = document.getElementById('new-review--name'),\n    form_comment = document.getElementById('new-review--comment'),\n    form_rating = document.getElementById('new-review--rating'),\n    form_stars = form_rating.value,\n    form_messageArea = document.getElementById('new-review--msg'),\n    reviewList = document.getElementById('reviews-list'),\n    errorMessage = '';\n\n  const check_nameEmpty = '<li>Your name couldn&apos;t be empty</li>',\n    check_nameShort =\n      '<li>Your name is too short (please provide at least 3 characters)</li>',\n    check_commentEmpty = '<li>Your review couldn&apos;t be empty</li>',\n    check_commentShort =\n      '<li>Your review is too short <em>(at least 100 characters comment is requested)</em></li>',\n    check_noRating = '<li>Rating is not set</li>';\n\n  event.preventDefault();\n  resetMessage(form_messageArea);\n  form_button.disabled = true;\n  if (!form_name.value)\n    errorMessage += (errorMessage ? '<br/>' : '<ul>') + check_nameEmpty;\n\n  if (form_name.value.length < 2)\n    errorMessage += (errorMessage ? '<br/>' : '<ul>') + check_nameShort;\n\n  if (!form_comment.value)\n    errorMessage += (errorMessage ? '<br/>' : '<ul>') + check_commentEmpty;\n\n  if (form_comment.value.length < 100)\n    errorMessage += (errorMessage ? '<br/>' : '<ul>') + check_commentShort;\n\n  if (form_stars === 'none')\n    errorMessage += (errorMessage ? '<br/>' : '<ul>') + check_noRating;\n\n  if (errorMessage) {\n    errorMessage += '</ul>';\n    form_messageArea.innerHTML = errorMessage;\n    form_messageArea.setAttribute('class', 'error');\n    form_messageArea.style.display = 'block';\n    form_button.disabled = false;\n  } else {\n    form_messageArea.classList.add('success');\n    // Assing values to review object\n    review = {\n      restaurant_id: self.restaurant.id,\n      name: escapeRegExp(form_name.value),\n      rating: parseInt(form_stars),\n      comments: escapeRegExp(form_comment.value)\n    };\n    // add review to local and remote db\n    DBHelper.saveReview(review).then(review => {\n      // create new review DOM node\n      reviewHtml = createReviewHTML(review);\n      // clean fields in form\n      form_name.value = '';\n      form_comment.value = '';\n      form_rating.selectedIndex = 0;\n      // success message\n      setTimeout(_ => {\n        reviewHtml.setAttribute('class', 'added');\n        if (reviewList.firstChild) {\n          reviewList.insertBefore(reviewHtml, reviewList.firstChild);\n        } else {\n          reviewList.appendChild(reviewHtml);\n        }\n        form_messageArea.setAttribute('class', 'success');\n        form_messageArea.style.display = 'block';\n        form_button.disabled = false;\n        smoothScrollTo('reviews-container', 650, 100);\n        reviewHtml.firstChild.focus();\n      }, 250);\n      setTimeout(_ => {\n        resetMessage(form_messageArea);\n        reviewHtml.setAttribute('class', '');\n        form_button.disabled = false;\n      }, 7500);\n    });\n  }\n};\n\n/**\n * reset form message area\n */\nresetMessage = message => {\n  message.style.display = 'none';\n  message.classList.remove('success', 'error');\n  message.innerHTML = '';\n};\n\n/**\n * Easing function\n */\neaseInOutQuart = (time, from, distance, duration) => {\n  if ((time /= duration / 2) < 1)\n    return (distance / 2) * time * time * time * time + from;\n  return (-distance / 2) * ((time -= 2) * time * time * time - 2) + from;\n};\n/**\n * smooth scroll animation\n * remix version of iwazaru's gist\n * @orginal: https://gist.github.com/iwazaru/4c8819420ce5237aeaf338339df25c32\n * @param {int} endX: destination x coordinate\n * @param {int} duration: animation duration in ms\n */\nwindow.smoothScrollTo = (targetID, duration = 400, delta = 0) => {\n  let startY = window.scrollY || window.pageYOffset,\n    element = document.getElementById(targetID),\n    endY = element.offsetTop - element.scrollTop + element.clientTop - delta;\n  (distanceY = endY - startY), (startTime = new Date().getTime());\n  let timer = window.setInterval(function() {\n    let time = new Date().getTime() - startTime,\n      newY = easeInOutQuart(time, startY, distanceY, duration);\n    if (time >= duration) {\n      window.clearInterval(timer);\n    }\n    window.scrollTo(0, newY);\n  }, 1000 / 60); // 60 fps\n};\n"]}